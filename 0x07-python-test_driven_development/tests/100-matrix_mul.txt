Test Casess of Module ``matrix_mul``
====================================

Using ``matrix_mul``
--------------------

	>>> matrix_mul = __import__('100-matrix_mul').matrix_mul


1. Valid arguments:
-------------------

	>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
	[[7, 10], [15, 22]]
	>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
	[[13, 16]]


2. Invalid arguments:
-----------------------

	2.0. wrong size:
	----------------

	>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2, 9], [3, 4, 5], [1, 2, 3]]))
	Traceback (most recent call last):
	ValueError: m_a and m_b can't be multiplied

	2.1. m_a is not a list:
	--------------------------

	>>> print(matrix_mul("abc", [[1, 2, 9], [3, 4, 5]]))
	Traceback (most recent call last):
	TypeError: m_a must be a list

	>>> print(matrix_mul(1, [[1, 2, 9], [3, 4, 5]]))
	Traceback (most recent call last):
	TypeError: m_a must be a list

	>>> print(matrix_mul((0, 0), [[1, 2, 9], [3, 4, 5]]))
	Traceback (most recent call last):
	TypeError: m_a must be a list

	>>> print(matrix_mul({1, 2, 3, 4}, [[1, 2, 9], [3, 4, 5]]))
	Traceback (most recent call last):
	TypeError: m_a must be a list

	>>> print(matrix_mul({'name': "smith"}, [[1, 2, 9], [3, 4, 5]]))
	Traceback (most recent call last):
	TypeError: m_a must be a list

	2.2. m_b is not a list:
	-----------------------

	>>> print(matrix_mul([[1, 2], [3, 4]], "abc"))
	Traceback (most recent call last):
	TypeError: m_b must be a list

	>>> print(matrix_mul([[1, 2], [3, 4]], 1.5))
	Traceback (most recent call last):
	TypeError: m_b must be a list

	2.3. m_a is not a list of lists:
	--------------------------------

	>>> print(matrix_mul([1, 2, 3], [[1, 2, 9], [3, 4, 5]]))
	Traceback (most recent call last):
	TypeError: m_a must be a list of lists

	2.4. m_b is not a list of lists
	-------------------------------

	>>> print(matrix_mul([[1, 2, 9], [3, 4, 5]], ["ahmed", 5.9, [1]]))
	Traceback (most recent call last):
	TypeError: m_b must be a list of lists

	2.5. m_a is empty:
	------------------

	>>> print(matrix_mul([], [[1, 2, 9], [3, 4, 5]]))
	Traceback (most recent call last):
	ValueError: m_a can't be empty

	>>> print(matrix_mul([[]], [[1, 2, 9], [3, 4, 5]]))
	Traceback (most recent call last):
	ValueError: m_a can't be empty

	2.6. m_b is empty:
	------------------

	>>> print(matrix_mul([[1, 2], [3, 4]], []))
	Traceback (most recent call last):
	ValueError: m_b can't be empty

	>>> print(matrix_mul([[1, 2], [3, 4]], [[]]))
	Traceback (most recent call last):
	ValueError: m_b can't be empty

	2.7. one element of those list of lists is not an integer or a float:
	----------------------------------------------------------------

	>>> print(matrix_mul([["abc", 1, 2.5]], [[1, 2, 9], [3, 4, 5]]))
	Traceback (most recent call last):
	TypeError: m_a should contain only integers or floats

	>>> print(matrix_mul([[1, 2], [3, 4]], [[1, (1.5, 1)]]))
	Traceback (most recent call last):
	TypeError: m_b should contain only integers or floats

	2.8. m_a or m_b is not a rectangle (all ‘rows’ should be of the same size):
	----------------------------------------------------------------------

	>>> print(matrix_mul([[1, 2, 3], [4, 5, 6, 7]], [[1, 2, 9], [3, 4, 5]]))
	Traceback (most recent call last):
	TypeError: each row of m_a must be of the same size

	>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [1, 2]]))
	Traceback (most recent call last):
	TypeError: each row of m_b must be of the same size

	2.9 m_a or m_b is None:
	-----------------------

	>>> print(matrix_mul(None, [[1, 2, 9], [3, 4, 5]]))
	Traceback (most recent call last):
	TypeError: m_a must be a list

	>>> print(matrix_mul([[1, 2], [3, 4]], None))
	Traceback (most recent call last):
	TypeError: m_b must be a list

	2.10. m_a and m_b are invalid:
	------------------------------

	>>> print(matrix_mul([["abc", 1, 2.5]], [[]]))
	Traceback (most recent call last):
	TypeError: m_a should contain only integers or floats

	>>> print(matrix_mul([1, 2, 3], [[1, 2, 4]]))
	Traceback (most recent call last):
	TypeError: m_a must be a list of lists

	2.11 missing argument/s:
	------------------------

	>>> print(matrix_mul([[139, 1, 2.5]]))
	Traceback (most recent call last):
	TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

	>>> print(matrix_mul())
	Traceback (most recent call last):
	TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

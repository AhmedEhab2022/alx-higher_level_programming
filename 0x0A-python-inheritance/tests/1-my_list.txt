Test ``print_sorted`` method
============================

Using ``print_sorted``
----------------------

        >>> MyList = __import__('1-my_list').MyList


Tests
-----

in case of one element:

        >>> my_list = MyList()
	>>> my_list.append(4)
        >>> print(my_list)
        [4]
        >>> my_list.print_sorted()
        [4]
        >>> print(my_list)
        [4]

in case of list of unsorted positive integers:
        >>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
        >>> print(my_list)
        [1, 4, 2, 3, 5]
        >>> my_list.print_sorted()
        [1, 2, 3, 4, 5]
        >>> print(my_list)
        [1, 4, 2, 3, 5]

in case of list of unsorted negative integers:

        >>> my_list = MyList()
	>>> my_list.append(-1)
        >>> my_list.append(-4)
        >>> my_list.append(-2)
        >>> my_list.append(-3)
        >>> my_list.append(-5)
        >>> print(my_list)
        [-1, -4, -2, -3, -5]
        >>> my_list.print_sorted()
        [-5, -4, -3, -2, -1]
        >>> print(my_list)
        [-1, -4, -2, -3, -5]

in case of list of unsorted positive and negative integers:

        >>> my_list = MyList()
	>>> my_list.append(1)
        >>> my_list.append(4)
        >>> my_list.append(2)
        >>> my_list.append(-3)
        >>> my_list.append(-5)
        >>> print(my_list)
        [1, 4, 2, -3, -5]
        >>> my_list.print_sorted()
        [-5, -3, 1, 2, 4]
        >>> print(my_list)
        [1, 4, 2, -3, -5]

in case of list of sorted integers:

        >>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(4)
	>>> my_list.append(5)
        >>> print(my_list)
        [1, 2, 3, 4, 5]
        >>> my_list.print_sorted()
        [1, 2, 3, 4, 5]
        >>> print(my_list)
        [1, 2, 3, 4, 5]

in case of empty list:

        >>> my_list = MyList()
        >>> print(my_list)
        []
        >>> my_list.print_sorted()
        []
        >>> print(my_list)
        []
